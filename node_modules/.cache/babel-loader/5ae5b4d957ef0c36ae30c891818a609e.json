{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vthakur\\\\Desktop\\\\react-notes-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes // notes is a prop of NoteList and it's value is initial state i.e. empty array\n        ,\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"ImkA/wiVDMTCeAe8B+2xMlvKj+0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vthakur/Desktop/react-notes-app/src/App.js"],"names":["useState","useEffect","nanoid","NotesList","Header","App","notes","setNotes","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","text","date","Date","newNote","id","toLocaleDateString","newNotes","deleteNote","filter","note"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,UAAU,GAAGC,IAAI,CAACC,KAAL,CAClBC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CADkB,CAAnB;;AAIA,QAAIJ,UAAJ,EAAgB;AACfH,MAAAA,QAAQ,CAACG,UAAD,CAAR;AACA;AACD,GARQ,EAQN,EARM,CAAT;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,YAAY,CAACE,OAAb,CACC,sBADD,EAECJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAFD;AAIA,GALQ,EAKN,CAACA,KAAD,CALM,CAAT;;AAOA,QAAMW,OAAO,GAAIC,IAAD,IAAU;AACzB,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,OAAO,GAAG;AACfC,MAAAA,EAAE,EAAEpB,MAAM,EADK;AAEfgB,MAAAA,IAAI,EAAEA,IAFS;AAGfC,MAAAA,IAAI,EAAEA,IAAI,CAACI,kBAAL;AAHS,KAAhB;AAKA,UAAMC,QAAQ,GAAG,CAAC,GAAGlB,KAAJ,EAAWe,OAAX,CAAjB;AACAd,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACA,GATD;;AAWA,QAAMC,UAAU,GAAIH,EAAD,IAAQ;AAC1B,UAAME,QAAQ,GAAGlB,KAAK,CAACoB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAjB;AACAf,IAAAA,QAAQ,CAACiB,QAAD,CAAR;AACA,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAG,GAAEhB,QAAQ,IAAI,WAAY,EAA3C;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,oBAAoB,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,SAAD;AACC,QAAA,KAAK,EAAEH,KADR,CACe;AADf;AAEC,QAAA,aAAa,EAAEW,OAFhB;AAGC,QAAA,gBAAgB,EAAEQ;AAHnB;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAlDD;;GAAMpB,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './components/NotesList';\nimport Header from './components/Header';\n\nconst App = () => {\n\tconst [notes, setNotes] = useState([]);\n\n\tconst [darkMode, setDarkMode] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst savedNotes = JSON.parse(\n\t\t\tlocalStorage.getItem('react-notes-app-data')\n\t\t);\n\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'react-notes-app-data',\n\t\t\tJSON.stringify(notes)\n\t\t);\n\t}, [notes]);\n\n\tconst addNote = (text) => {\n\t\tconst date = new Date();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttext: text,\n\t\t\tdate: date.toLocaleDateString(),\n\t\t};\n\t\tconst newNotes = [...notes, newNote];\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst deleteNote = (id) => {\n\t\tconst newNotes = notes.filter((note) => note.id !== id);\n\t\tsetNotes(newNotes);\n\t};\n\n\treturn (\n\t\t<div className={`${darkMode && 'dark-mode'}`}>\n\t\t\t<div className='container'>\n\t\t\t\t<Header handleToggleDarkMode={setDarkMode} />\n\t\t\t\t<NotesList\n\t\t\t\t\tnotes={notes} // notes is a prop of NoteList and it's value is initial state i.e. empty array\n\t\t\t\t\thandleAddNote={addNote}\n\t\t\t\t\thandleDeleteNote={deleteNote}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}