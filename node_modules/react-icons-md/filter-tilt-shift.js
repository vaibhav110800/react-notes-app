'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var React = require('react');
var IconBase = require('react-icon-base');

var MdFilterTiltShift = function (_React$Component) {
    _inherits(MdFilterTiltShift, _React$Component);

    function MdFilterTiltShift() {
        _classCallCheck(this, MdFilterTiltShift);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(MdFilterTiltShift).apply(this, arguments));
    }

    _createClass(MdFilterTiltShift, [{
        key: 'render',
        value: function render() {
            return React.createElement(
                IconBase,
                _extends({ viewBox: '0 0 40 40' }, this.props),
                React.createElement(
                    'g',
                    null,
                    React.createElement('path', { d: 'm9.5 32.9l2.3-2.4c1.9 1.5 4.1 2.4 6.6 2.7v3.4c-3.4-0.3-6.4-1.7-8.9-3.7z m12.1 0.3c2.5-0.3 4.7-1.2 6.5-2.7l2.4 2.4c-2.5 2-5.5 3.4-8.9 3.7v-3.4z m8.9-5c1.5-1.9 2.4-4.1 2.7-6.5h3.4c-0.3 3.4-1.7 6.3-3.7 8.8z m-5.5-8.2c0 2.7-2.3 5-5 5s-5-2.3-5-5 2.3-5 5-5 5 2.3 5 5z m-18.2 1.6c0.3 2.5 1.2 4.7 2.7 6.5l-2.4 2.4c-2-2.5-3.3-5.5-3.7-8.9h3.4z m2.7-9.8c-1.5 1.9-2.4 4.1-2.7 6.6h-3.4c0.4-3.4 1.7-6.4 3.7-8.9z m23.7 6.6c-0.3-2.5-1.2-4.7-2.7-6.6l2.4-2.3c2 2.5 3.4 5.5 3.7 8.9h-3.4z m-2.7-11.3l-2.3 2.4c-1.9-1.5-4.1-2.4-6.6-2.7v-3.4c3.4 0.4 6.4 1.7 8.9 3.7z m-12.1-0.3c-2.5 0.3-4.7 1.2-6.6 2.7l-2.3-2.4c2.5-2 5.5-3.3 8.9-3.7v3.4z' })
                )
            );
        }
    }]);

    return MdFilterTiltShift;
}(React.Component);

exports.default = MdFilterTiltShift;
module.exports = exports['default'];